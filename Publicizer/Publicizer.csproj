<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <LangVersion>10.0</LangVersion>
    <Nullable>enable</Nullable>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <Version>1.0.0</Version>
    <Authors>Dávid Németi</Authors>
    <Description>Access private members in a typesafe manner.</Description>
    <PackageTags>SourceGenerator;Reflection;PrivateMembers;Typesafe;CompileTimeSafety</PackageTags>
    <PackageLicenseExpression>LGPL-3.0-or-later</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/davidnemeti/Publicizer</PackageProjectUrl>

    <!--
      We want to include the build output as a lib dependency, because although we do not need the source generator during runtime, however we do need the attribute.
      Thus, we do not apply the following:
      <IncludeBuildOutput>false</IncludeBuildOutput>
    -->
  </PropertyGroup>

  <ItemGroup>
    <!-- Package the generator in the analyzer directory of the nuget package -->
    <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.0.1" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

</Project>
